[{"C:\\Users\\avata\\OneDrive\\Documentos\\codes\\react-things\\crud-finances\\src\\index.tsx":"1","C:\\Users\\avata\\OneDrive\\Documentos\\codes\\react-things\\crud-finances\\src\\App.tsx":"2","C:\\Users\\avata\\OneDrive\\Documentos\\codes\\react-things\\crud-finances\\src\\contexts\\BalanceContext.tsx":"3","C:\\Users\\avata\\OneDrive\\Documentos\\codes\\react-things\\crud-finances\\src\\contexts\\TransactionsContext.tsx":"4","C:\\Users\\avata\\OneDrive\\Documentos\\codes\\react-things\\crud-finances\\src\\components\\Balance.tsx":"5","C:\\Users\\avata\\OneDrive\\Documentos\\codes\\react-things\\crud-finances\\src\\components\\Transaction.tsx":"6","C:\\Users\\avata\\OneDrive\\Documentos\\codes\\react-things\\crud-finances\\src\\components\\Modal.tsx":"7","C:\\Users\\avata\\OneDrive\\Documentos\\codes\\react-things\\crud-finances\\src\\components\\NewTransaction.tsx":"8"},{"size":465,"mtime":1616348505777,"results":"9","hashOfConfig":"10"},{"size":561,"mtime":1616415842007,"results":"11","hashOfConfig":"10"},{"size":2760,"mtime":1616366935699,"results":"12","hashOfConfig":"10"},{"size":1589,"mtime":1616360867984,"results":"13","hashOfConfig":"10"},{"size":1285,"mtime":1616415815247,"results":"14","hashOfConfig":"10"},{"size":1833,"mtime":1616362541087,"results":"15","hashOfConfig":"10"},{"size":4314,"mtime":1616366897369,"results":"16","hashOfConfig":"10"},{"size":1516,"mtime":1616415874719,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"kq8fxx",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\avata\\OneDrive\\Documentos\\codes\\react-things\\crud-finances\\src\\index.tsx",[],["38","39"],"C:\\Users\\avata\\OneDrive\\Documentos\\codes\\react-things\\crud-finances\\src\\App.tsx",[],"C:\\Users\\avata\\OneDrive\\Documentos\\codes\\react-things\\crud-finances\\src\\contexts\\BalanceContext.tsx",["40","41","42","43"],"import { createContext, ReactNode, useContext, useEffect, useState } from \"react\";\r\nimport Axios from 'axios';\r\nimport { TransactionsContext } from \"./TransactionsContext\";\r\n\r\ninterface BalanceContextData {\r\n    total: number;\r\n    setTotal: React.Dispatch<React.SetStateAction<number>>;\r\n    expense: number;\r\n    setExpense: React.Dispatch<React.SetStateAction<number>>;\r\n    income: number;\r\n    setIncome: React.Dispatch<React.SetStateAction<number>>;\r\n    addBalance: (value: number) => void;\r\n    removeBalance: (value: number) => void;\r\n    setValues: React.Dispatch<React.SetStateAction<any>>;\r\n    values: any[];\r\n    balance: () => void;\r\n}\r\n\r\ninterface BalanceProviderProps{\r\n    children: ReactNode;\r\n}\r\n\r\nexport const BalanceContext = createContext({} as BalanceContextData);\r\n\r\nfunction BalanceProvider({children}: BalanceProviderProps) {\r\n    const [total, setTotal] = useState(0);\r\n\r\n    const [expense, setExpense] = useState(0);\r\n\r\n    const [income, setIncome] = useState(0);\r\n\r\n    const [values, setValues] = useState<any[]>([]);\r\n\r\n    const db = 'https://crud-finances-heroku.herokuapp.com';\r\n\r\n    useEffect(() => {\r\n        Axios.get(db + '/balance/get')\r\n         .then(data => {\r\n             setValues(data.data)\r\n         })\r\n     }, [])\r\n\r\n\r\n\r\n    function addBalance(value: number) {\r\n        if(value > 0){\r\n            setIncome(previousValue => previousValue + Number(value));\r\n            setTotal(previousPrice => previousPrice + Number(value));\r\n        } else if (value < 0) {\r\n            setExpense(previousValue => previousValue + Number(value));\r\n            setTotal(previousValue => previousValue + Number(value));\r\n        }\r\n    }\r\n\r\n    function balance(){\r\n        values.map(value => {\r\n            const newValue = Number(value.value).toFixed(2);\r\n            addBalance(Number(newValue));\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        balance();\r\n    },[values])\r\n\r\n    function removeBalance(value: number) {\r\n        if(value > 0){\r\n            setIncome(previousValue => previousValue - Number(value));\r\n            setTotal(previousPrice => previousPrice - Number(value));\r\n        } else if (value < 0) {\r\n            setExpense(previousValue => previousValue - Number(value));\r\n            setTotal(previousValue => previousValue - Number(value));\r\n        }\r\n    }\r\n\r\n    return(\r\n        <BalanceContext.Provider value={{\r\n            setTotal,\r\n            total,\r\n            expense,\r\n            income,\r\n            setExpense,\r\n            setIncome,\r\n            addBalance,\r\n            removeBalance,\r\n            setValues,\r\n            values,\r\n            balance\r\n        }}>\r\n            {children}\r\n        </BalanceContext.Provider>\r\n    )\r\n}\r\n\r\nexport default BalanceProvider;","C:\\Users\\avata\\OneDrive\\Documentos\\codes\\react-things\\crud-finances\\src\\contexts\\TransactionsContext.tsx",[],"C:\\Users\\avata\\OneDrive\\Documentos\\codes\\react-things\\crud-finances\\src\\components\\Balance.tsx",[],"C:\\Users\\avata\\OneDrive\\Documentos\\codes\\react-things\\crud-finances\\src\\components\\Transaction.tsx",["44"],"import { useContext } from 'react';\r\nimport { TransactionsContext } from '../contexts/TransactionsContext';\r\nimport Modal from './Modal';\r\nimport NewTransaction from './NewTransaction';\r\n\r\nconst Transaction = () => {\r\n    const {\r\n            ModalActive, \r\n            setModalActive,\r\n            addTrans\r\n        } = useContext(TransactionsContext);\r\n\r\n\r\n        const transactionList = addTrans.map((transaction: any) => (\r\n                <NewTransaction \r\n                InputDescription={transaction.description}\r\n                InputAmount={transaction.value}\r\n                InputDate={transaction.date}\r\n                id={transaction.id}\r\n                key={transaction.id}\r\n                />\r\n            )\r\n        )\r\n\r\n    \r\n    return (\r\n        <section id=\"transactions\">        \r\n            <h2 className=\"sr-only\">\r\n                Transações\r\n            </h2>\r\n\r\n            <a \r\n                href=\"#\" \r\n                className=\"button new\" \r\n                onClick={() => setModalActive(true)}\r\n            >\r\n                + Nova Transação\r\n            </a>\r\n            \r\n            <table id=\"data-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Descrição</th>\r\n                        <th>Valor</th>\r\n                        <th>Data</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {transactionList}\r\n                </tbody>\r\n\r\n            </table>\r\n                <div \r\n                    className={(ModalActive === false)\r\n                    ? 'modal-overlay' \r\n                    : 'modal-overlay active'\r\n                    }>\r\n                <Modal />\r\n                </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Transaction;","C:\\Users\\avata\\OneDrive\\Documentos\\codes\\react-things\\crud-finances\\src\\components\\Modal.tsx",["45","46","47"],"import Axios from 'axios';\r\nimport { useContext, useEffect } from 'react';\r\nimport { BalanceContext } from '../contexts/BalanceContext';\r\nimport { TransactionsContext } from '../contexts/TransactionsContext';\r\n\r\n\r\nconst Modal = () => {\r\n    const {\r\n            setModalActive, \r\n            InputDescription,\r\n            setInputDescription, \r\n            InputAmount,\r\n            setInputAmount, \r\n            InputDate,\r\n            setInputDate,\r\n            addTrans,\r\n            setAddTrans\r\n        } = useContext(TransactionsContext);\r\n\r\n        const { balance } = useContext(BalanceContext);\r\n\r\n        const setDescription = (e: any) => {\r\n            setInputDescription(e.target.value)\r\n        }\r\n\r\n        const setAmount = (e: any) => {\r\n            setInputAmount(e.target.value)\r\n        }\r\n\r\n        const setDate = (e: any) => {\r\n            setInputDate(e.target.value)\r\n        }\r\n\r\n        function resetValues(e: any) {\r\n            e.target.reset();\r\n            e.preventDefault();\r\n\r\n            setInputDescription('');\r\n            setInputAmount(0);\r\n            setInputDate('');\r\n        }\r\n\r\n        const db = 'https://crud-finances-heroku.herokuapp.com';\r\n\r\n        function addTransaction(e: any) {\r\n            if(InputDescription === '' || InputDate === '' || InputAmount === 0){\r\n                alert('Preencha todos os campos Por favor!')\r\n                e.preventDefault();\r\n            } else {\r\n                Axios.post(db + '/transaction/add', {\r\n                    description: InputDescription,\r\n                    value: InputAmount,\r\n                    date: InputDate\r\n                })\r\n                setModalActive(false);\r\n\r\n                Axios.post(db + '/balance/add', {\r\n                    value: InputAmount\r\n                })\r\n            }\r\n        }\r\n\r\n        useEffect(() => {\r\n            Axios.get(db + '/transaction/get')\r\n            .then(result => {\r\n                setAddTrans(result.data);\r\n            });\r\n        }, [addTrans])\r\n\r\n        useEffect(() => {\r\n            balance();\r\n        }, [])\r\n\r\n    return (        \r\n        <div className=\"modal\">     \r\n            <div id=\"form\">\r\n                <h2>Nova Transação</h2>\r\n                <form onSubmit={e => resetValues(e)}>   \r\n                    <div className=\"input-group\">\r\n                        <label className=\"sr-only\" htmlFor=\"description\">Descrição</label>\r\n                            <input \r\n                                type=\"text\"\r\n                                id=\"description\"\r\n                                name=\"description\"\r\n                                placeholder=\"Descrição\"\r\n                                onChange={(e) => setDescription(e)}                                \r\n                            />\r\n                    </div>       \r\n                    <div className=\"input-group\">\r\n                        <label className=\"sr-only\" htmlFor=\"amount\">Valor</label>\r\n                            <input \r\n                                type=\"number\"\r\n                                step=\"0.01\"\r\n                                id=\"amount\"\r\n                                name=\"amount\"\r\n                                placeholder=\"0,00\"\r\n                                onChange={(e) => setAmount(e)}\r\n                            />\r\n                    </div>        \r\n                    <div className=\"input-group\">\r\n                        <label className=\"sr-only\" htmlFor=\"date\">Data</label>\r\n                            <input \r\n                            type=\"date\"\r\n                            id=\"date\"\r\n                            name=\"date\"\r\n                            onChange={(e) => setDate(e)}\r\n                            />\r\n                    </div>  \r\n                    <div className=\"input-group actions\">\r\n                        <a href=\"#\" className=\"button cancel\" onClick={() => setModalActive(false)}>Cancelar</a>\r\n                        <button \r\n                            type=\"submit\"\r\n                            onClick={(e) => addTransaction(e)}\r\n                        >\r\n                        Salvar\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","C:\\Users\\avata\\OneDrive\\Documentos\\codes\\react-things\\crud-finances\\src\\components\\NewTransaction.tsx",["48","49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":36,"nodeType":"56","messageId":"57","endLine":1,"endColumn":46},{"ruleId":"54","severity":1,"message":"58","line":3,"column":10,"nodeType":"56","messageId":"57","endLine":3,"endColumn":29},{"ruleId":"59","severity":1,"message":"60","line":56,"column":26,"nodeType":"61","messageId":"62","endLine":56,"endColumn":28},{"ruleId":"63","severity":1,"message":"64","line":64,"column":7,"nodeType":"65","endLine":64,"endColumn":15,"suggestions":"66"},{"ruleId":"67","severity":1,"message":"68","line":32,"column":13,"nodeType":"69","endLine":36,"endColumn":14},{"ruleId":"63","severity":1,"message":"70","line":68,"column":12,"nodeType":"65","endLine":68,"endColumn":22,"suggestions":"71"},{"ruleId":"63","severity":1,"message":"64","line":72,"column":12,"nodeType":"65","endLine":72,"endColumn":14,"suggestions":"72"},{"ruleId":"67","severity":1,"message":"68","line":110,"column":25,"nodeType":"69","endLine":110,"endColumn":101},{"ruleId":"54","severity":1,"message":"73","line":1,"column":22,"nodeType":"56","messageId":"57","endLine":1,"endColumn":31},{"ruleId":"54","severity":1,"message":"74","line":1,"column":33,"nodeType":"56","messageId":"57","endLine":1,"endColumn":41},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'TransactionsContext' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'balance'. Either include it or remove the dependency array.","ArrayExpression",["77"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'setAddTrans'. Either include it or remove the dependency array.",["78"],["79"],"'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},"Update the dependencies array to be: [balance, values]",{"range":"86","text":"87"},"Update the dependencies array to be: [addTrans, setAddTrans]",{"range":"88","text":"89"},"Update the dependencies array to be: [balance]",{"range":"90","text":"91"},[1912,1920],"[balance, values]",[2006,2016],"[addTrans, setAddTrans]",[2083,2085],"[balance]"]