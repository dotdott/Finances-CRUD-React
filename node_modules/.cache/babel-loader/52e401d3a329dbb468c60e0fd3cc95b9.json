{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avata\\\\OneDrive\\\\Documentos\\\\codes\\\\react-things\\\\crud-finances\\\\src\\\\components\\\\Modal.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect } from 'react';\nimport { TransactionsContext } from '../contexts/TransactionsContext';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = () => {\n  _s();\n\n  const {\n    setModalActive,\n    InputDescription,\n    setInputDescription,\n    InputAmount,\n    setInputAmount,\n    InputDate,\n    setInputDate,\n    addTrans,\n    setAddTrans\n  } = useContext(TransactionsContext);\n\n  const setDescription = e => {\n    setInputDescription(e.target.value);\n  };\n\n  const setAmount = e => {\n    setInputAmount(e.target.value);\n  };\n\n  const setDate = e => {\n    setInputDate(e.target.value);\n  };\n\n  function resetValues(e) {\n    e.target.reset();\n    e.preventDefault();\n    setInputDescription('');\n    setInputAmount(0);\n    setInputDate('');\n  }\n\n  function addTransaction(e) {\n    if (InputDescription === '' || InputDate === '' || InputAmount === 0) {\n      alert('Preencha todos os campos Por favor!');\n      e.preventDefault();\n    } else {\n      Axios.post('http://localhost:5000/transaction/add', {\n        description: InputDescription,\n        value: InputAmount,\n        date: InputDate\n      });\n      setModalActive(false);\n      Axios.post('http://localhost:5000/balance/add', {\n        value: InputAmount\n      });\n    }\n  }\n\n  useEffect(() => {\n    Axios.get('http://localhost:5000/transaction/get').then(result => {\n      setAddTrans(result.data);\n    });\n  }, [addTrans]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Nova Transa\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => resetValues(e),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"sr-only\",\n            htmlFor: \"description\",\n            children: \"Descri\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"description\",\n            name: \"description\",\n            placeholder: \"Descri\\xE7\\xE3o\",\n            onChange: e => setDescription(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"sr-only\",\n            htmlFor: \"amount\",\n            children: \"Valor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.01\",\n            id: \"amount\",\n            name: \"amount\",\n            placeholder: \"0,00\",\n            onChange: e => setAmount(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"sr-only\",\n            htmlFor: \"date\",\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"date\",\n            name: \"date\",\n            onChange: e => setDate(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            className: \"button cancel\",\n            onClick: () => setModalActive(false),\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: e => addTransaction(e),\n            children: \"Salvar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Modal, \"LPN0Myic3ct8f2TTxAll2RRNIA0=\");\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["C:/Users/avata/OneDrive/Documentos/codes/react-things/crud-finances/src/components/Modal.tsx"],"names":["useContext","useEffect","TransactionsContext","Axios","Modal","setModalActive","InputDescription","setInputDescription","InputAmount","setInputAmount","InputDate","setInputDate","addTrans","setAddTrans","setDescription","e","target","value","setAmount","setDate","resetValues","reset","preventDefault","addTransaction","alert","post","description","date","get","then","result","data"],"mappings":"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","sourcesContent":["import { nanoid } from 'nanoid';\r\nimport { useContext, useEffect } from 'react';\r\nimport { BalanceContext } from '../contexts/BalanceContext';\r\nimport { TransactionsContext } from '../contexts/TransactionsContext';\r\nimport Axios from 'axios';\r\n\r\n\r\nconst Modal = () => {\r\n    const {\r\n            setModalActive, \r\n            InputDescription,\r\n            setInputDescription, \r\n            InputAmount,\r\n            setInputAmount, \r\n            InputDate,\r\n            setInputDate,\r\n            addTrans,\r\n            setAddTrans\r\n        } = useContext(TransactionsContext);\r\n\r\n        const setDescription = (e: any) => {\r\n            setInputDescription(e.target.value)\r\n        }\r\n\r\n        const setAmount = (e: any) => {\r\n            setInputAmount(e.target.value)\r\n        }\r\n\r\n        const setDate = (e: any) => {\r\n            setInputDate(e.target.value)\r\n        }\r\n\r\n        function resetValues(e: any) {\r\n            e.target.reset();\r\n            e.preventDefault();\r\n\r\n            setInputDescription('');\r\n            setInputAmount(0);\r\n            setInputDate('');\r\n        }\r\n\r\n        \r\n        function addTransaction(e: any) {\r\n            if(InputDescription === '' || InputDate === '' || InputAmount === 0){\r\n                alert('Preencha todos os campos Por favor!')\r\n                e.preventDefault();\r\n            } else {\r\n                Axios.post('http://localhost:5000/transaction/add', {\r\n                    description: InputDescription,\r\n                    value: InputAmount,\r\n                    date: InputDate\r\n                })\r\n                setModalActive(false);\r\n\r\n                Axios.post('http://localhost:5000/balance/add', {\r\n                    value: InputAmount\r\n                })\r\n            }\r\n        }\r\n\r\n        useEffect(() => {\r\n            Axios.get('http://localhost:5000/transaction/get')\r\n            .then(result => {\r\n                setAddTrans(result.data);\r\n            });\r\n        }, [addTrans])\r\n\r\n    return (        \r\n        <div className=\"modal\">     \r\n            <div id=\"form\">\r\n                <h2>Nova Transação</h2>\r\n                <form onSubmit={e => resetValues(e)}>   \r\n                    <div className=\"input-group\">\r\n                        <label className=\"sr-only\" htmlFor=\"description\">Descrição</label>\r\n                            <input \r\n                                type=\"text\"\r\n                                id=\"description\"\r\n                                name=\"description\"\r\n                                placeholder=\"Descrição\"\r\n                                onChange={(e) => setDescription(e)}                                \r\n                            />\r\n                    </div>       \r\n                    <div className=\"input-group\">\r\n                        <label className=\"sr-only\" htmlFor=\"amount\">Valor</label>\r\n                            <input \r\n                                type=\"number\"\r\n                                step=\"0.01\"\r\n                                id=\"amount\"\r\n                                name=\"amount\"\r\n                                placeholder=\"0,00\"\r\n                                onChange={(e) => setAmount(e)}\r\n                            />\r\n                    </div>        \r\n                    <div className=\"input-group\">\r\n                        <label className=\"sr-only\" htmlFor=\"date\">Data</label>\r\n                            <input \r\n                            type=\"date\"\r\n                            id=\"date\"\r\n                            name=\"date\"\r\n                            onChange={(e) => setDate(e)}\r\n                            />\r\n                    </div>  \r\n                    <div className=\"input-group actions\">\r\n                        <a href=\"#\" className=\"button cancel\" onClick={() => setModalActive(false)}>Cancelar</a>\r\n                        <button \r\n                            type=\"submit\"\r\n                            onClick={(e) => addTransaction(e)}\r\n                        >\r\n                        Salvar\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;"]},"metadata":{},"sourceType":"module"}