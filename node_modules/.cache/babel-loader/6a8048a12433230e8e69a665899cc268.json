{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avata\\\\OneDrive\\\\Documentos\\\\codes\\\\react-things\\\\crud-finances\\\\src\\\\contexts\\\\BalanceContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BalanceContext = /*#__PURE__*/createContext({});\n\nfunction BalanceProvider({\n  children\n}) {\n  _s();\n\n  const [total, setTotal] = useState(0);\n  const [expense, setExpense] = useState(0);\n  const [income, setIncome] = useState(0);\n  const [values, setValues] = useState([]);\n  const db = 'https://crud-finances-heroku.herokuapp.com';\n  useEffect(() => {\n    Axios.get(db + '/balance/get').then(data => {\n      setValues(data.data);\n    });\n  }, []);\n\n  function addBalance(value) {\n    if (value > 0) {\n      setIncome(previousValue => previousValue + Number(value));\n      setTotal(previousPrice => previousPrice + Number(value));\n    } else if (value < 0) {\n      setExpense(previousValue => previousValue + Number(value));\n      setTotal(previousValue => previousValue + Number(value));\n    }\n  }\n\n  function balance() {\n    values.map(value => {\n      const newValue = Number(value.value).toFixed(2);\n      addBalance(Number(newValue));\n    });\n  }\n\n  useEffect(() => {\n    balance();\n  }, [values]);\n\n  function removeBalance(value) {\n    if (value > 0) {\n      setIncome(previousValue => previousValue - Number(value));\n      setTotal(previousPrice => previousPrice - Number(value));\n    } else if (value < 0) {\n      setExpense(previousValue => previousValue - Number(value));\n      setTotal(previousValue => previousValue - Number(value));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(BalanceContext.Provider, {\n    value: {\n      setTotal,\n      total,\n      expense,\n      income,\n      setExpense,\n      setIncome,\n      addBalance,\n      removeBalance,\n      setValues,\n      values,\n      balance\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BalanceProvider, \"7WD0u/kOOH8fCSjN6HlTej89JVU=\");\n\n_c = BalanceProvider;\nexport default BalanceProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"BalanceProvider\");","map":{"version":3,"sources":["C:/Users/avata/OneDrive/Documentos/codes/react-things/crud-finances/src/contexts/BalanceContext.tsx"],"names":["createContext","useEffect","useState","Axios","BalanceContext","BalanceProvider","children","total","setTotal","expense","setExpense","income","setIncome","values","setValues","db","get","then","data","addBalance","value","previousValue","Number","previousPrice","balance","map","newValue","toFixed","removeBalance"],"mappings":"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","sourcesContent":["import { createContext, ReactNode, useContext, useEffect, useState } from \"react\";\r\nimport Axios from 'axios';\r\nimport { TransactionsContext } from \"./TransactionsContext\";\r\n\r\ninterface BalanceContextData {\r\n    total: number;\r\n    setTotal: React.Dispatch<React.SetStateAction<number>>;\r\n    expense: number;\r\n    setExpense: React.Dispatch<React.SetStateAction<number>>;\r\n    income: number;\r\n    setIncome: React.Dispatch<React.SetStateAction<number>>;\r\n    addBalance: (value: number) => void;\r\n    removeBalance: (value: number) => void;\r\n    setValues: React.Dispatch<React.SetStateAction<any>>;\r\n    values: any[];\r\n    balance: () => void;\r\n}\r\n\r\ninterface BalanceProviderProps{\r\n    children: ReactNode;\r\n}\r\n\r\nexport const BalanceContext = createContext({} as BalanceContextData);\r\n\r\nfunction BalanceProvider({children}: BalanceProviderProps) {\r\n    const [total, setTotal] = useState(0);\r\n\r\n    const [expense, setExpense] = useState(0);\r\n\r\n    const [income, setIncome] = useState(0);\r\n\r\n    const [values, setValues] = useState<any[]>([]);\r\n\r\n    const db = 'https://crud-finances-heroku.herokuapp.com';\r\n\r\n    useEffect(() => {\r\n        Axios.get(db + '/balance/get')\r\n         .then(data => {\r\n             setValues(data.data)\r\n         })\r\n     }, [])\r\n\r\n\r\n\r\n    function addBalance(value: number) {\r\n        if(value > 0){\r\n            setIncome(previousValue => previousValue + Number(value));\r\n            setTotal(previousPrice => previousPrice + Number(value));\r\n        } else if (value < 0) {\r\n            setExpense(previousValue => previousValue + Number(value));\r\n            setTotal(previousValue => previousValue + Number(value));\r\n        }\r\n    }\r\n\r\n    function balance(){\r\n        values.map(value => {\r\n            const newValue = Number(value.value).toFixed(2);\r\n            addBalance(Number(newValue));\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        balance();\r\n    },[values])\r\n\r\n    function removeBalance(value: number) {\r\n        if(value > 0){\r\n            setIncome(previousValue => previousValue - Number(value));\r\n            setTotal(previousPrice => previousPrice - Number(value));\r\n        } else if (value < 0) {\r\n            setExpense(previousValue => previousValue - Number(value));\r\n            setTotal(previousValue => previousValue - Number(value));\r\n        }\r\n    }\r\n\r\n    return(\r\n        <BalanceContext.Provider value={{\r\n            setTotal,\r\n            total,\r\n            expense,\r\n            income,\r\n            setExpense,\r\n            setIncome,\r\n            addBalance,\r\n            removeBalance,\r\n            setValues,\r\n            values,\r\n            balance\r\n        }}>\r\n            {children}\r\n        </BalanceContext.Provider>\r\n    )\r\n}\r\n\r\nexport default BalanceProvider;"]},"metadata":{},"sourceType":"module"}