{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avata\\\\OneDrive\\\\Documentos\\\\codes\\\\react-things\\\\crud-finances\\\\src\\\\components\\\\NewTransaction.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport { BalanceContext } from '../contexts/BalanceContext';\nimport { TransactionsContext } from '../contexts/TransactionsContext';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTransaction = ({\n  InputDescription,\n  InputAmount,\n  InputDate,\n  id\n}) => {\n  _s();\n\n  const {\n    addTrans\n  } = useContext(TransactionsContext);\n  const {\n    removeBalance,\n    addBalance,\n    total\n  } = useContext(BalanceContext);\n  const [values, setValues] = useState([]);\n\n  function removeTransaction(id) {\n    const value = addTrans.find(transaction => transaction.id === id);\n    removeBalance(value);\n    Axios.delete(`http://localhost:5000/balance/delete/${id}`);\n    Axios.delete(`http://localhost:5000/transaction/delete/${id}`);\n  }\n\n  useEffect(() => {\n    Axios.get('http://localhost:5000/balance/get').then(data => {\n      setValues(data.data);\n    });\n    const fixedValue = values.map(value => {\n      console.log(value);\n    });\n  }, [total]); // check how many values we have in balance\n  // then for each value, you pass it into addBalance\n  // when removed, it should call removeBalance\n  // based on the removed values ID's\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    id: id,\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"description\",\n      children: InputDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: InputAmount > 0 ? \"income\" : \"expense\",\n      children: InputAmount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"date\",\n      children: InputDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./assets/minus.svg\",\n        alt: \"Remover transa\\xE7\\xE3o\",\n        onClick: () => removeTransaction(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewTransaction, \"6B//yipi0FqBWZIZAFDxgDPM5JA=\");\n\n_c = NewTransaction;\nexport default NewTransaction;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTransaction\");","map":{"version":3,"sources":["C:/Users/avata/OneDrive/Documentos/codes/react-things/crud-finances/src/components/NewTransaction.tsx"],"names":["useContext","useEffect","useState","BalanceContext","TransactionsContext","Axios","NewTransaction","InputDescription","InputAmount","InputDate","id","addTrans","removeBalance","addBalance","total","values","setValues","removeTransaction","value","find","transaction","delete","get","then","data","fixedValue","map","console","log"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,mBAAT,QAAoC,iCAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AASA,MAAMC,cAAc,GAAG,CAAC;AAChBC,EAAAA,gBADgB;AAEhBC,EAAAA,WAFgB;AAGhBC,EAAAA,SAHgB;AAIhBC,EAAAA;AAJgB,CAAD,KAKQ;AAAA;;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAeX,UAAU,CAACI,mBAAD,CAA/B;AAEA,QAAM;AAAEQ,IAAAA,aAAF;AAAiBC,IAAAA,UAAjB;AAA6BC,IAAAA;AAA7B,MAAuCd,UAAU,CAACG,cAAD,CAAvD;AAEA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;;AAEA,WAASe,iBAAT,CAA2BP,EAA3B,EAAmC;AAC/B,UAAMQ,KAAK,GAAGP,QAAQ,CAACQ,IAAT,CAAeC,WAAD,IAAsBA,WAAW,CAACV,EAAZ,KAAmBA,EAAvD,CAAd;AACAE,IAAAA,aAAa,CAACM,KAAD,CAAb;AAEAb,IAAAA,KAAK,CAACgB,MAAN,CAAc,wCAAuCX,EAAG,EAAxD;AACAL,IAAAA,KAAK,CAACgB,MAAN,CAAc,4CAA2CX,EAAG,EAA5D;AACH;;AAEDT,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,KAAK,CAACiB,GAAN,CAAU,mCAAV,EACCC,IADD,CACMC,IAAI,IAAI;AACVR,MAAAA,SAAS,CAACQ,IAAI,CAACA,IAAN,CAAT;AACH,KAHD;AAKA,UAAMC,UAAU,GAAGV,MAAM,CAACW,GAAP,CAAWR,KAAK,IAAI;AACnCS,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACH,KAFkB,CAAnB;AAGH,GATQ,EASN,CAACJ,KAAD,CATM,CAAT,CAf2B,CA0B3B;AACA;AACA;AACA;;AAEA,sBACI;AAAI,IAAA,EAAE,EAAEJ,EAAR;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA,gBAA6BH;AAA7B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAEC,WAAW,GAAG,CAAd,GAAkB,QAAlB,GAA6B,SAA5C;AAAA,gBAAwDA;AAAxD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA,gBAAsBC;AAAtB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,6BACI;AACI,QAAA,GAAG,EAAC,oBADR;AAEI,QAAA,GAAG,EAAC,yBAFR;AAGI,QAAA,OAAO,EAAE,MAAMQ,iBAAiB,CAACP,EAAD;AAHpC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAlDD;;GAAMJ,c;;KAAAA,c;AAoDN,eAAeA,cAAf","sourcesContent":["import { useContext, useEffect, useState } from 'react';\r\nimport { BalanceContext } from '../contexts/BalanceContext';\r\nimport { TransactionsContext } from '../contexts/TransactionsContext';\r\nimport Axios from 'axios';\r\n\r\ninterface NewTransactionProps{\r\n    InputDescription: string;\r\n    InputAmount: number;\r\n    InputDate: string;\r\n    id: any;\r\n}\r\n\r\nconst NewTransaction = ({\r\n        InputDescription, \r\n        InputAmount, \r\n        InputDate, \r\n        id,\r\n    }: NewTransactionProps) => {\r\n    const { addTrans } = useContext(TransactionsContext);\r\n\r\n    const { removeBalance, addBalance, total } = useContext(BalanceContext);\r\n\r\n    const [values, setValues] = useState([])\r\n\r\n    function removeTransaction(id: any){\r\n        const value = addTrans.find((transaction: any) => transaction.id === id);\r\n        removeBalance(value);\r\n\r\n        Axios.delete(`http://localhost:5000/balance/delete/${id}`)\r\n        Axios.delete(`http://localhost:5000/transaction/delete/${id}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://localhost:5000/balance/get')\r\n        .then(data => {\r\n            setValues(data.data)\r\n        })\r\n\r\n        const fixedValue = values.map(value => {\r\n            console.log(value)\r\n        })\r\n    }, [total])\r\n\r\n    // check how many values we have in balance\r\n    // then for each value, you pass it into addBalance\r\n    // when removed, it should call removeBalance\r\n    // based on the removed values ID's\r\n\r\n    return (\r\n        <tr id={id}>\r\n            <td className=\"description\">{InputDescription}</td>\r\n            <td className={InputAmount > 0 ? \"income\" : \"expense\"}>{InputAmount}</td>\r\n            <td className=\"date\">{InputDate}</td>\r\n            <td>\r\n                <img \r\n                    src='./assets/minus.svg' \r\n                    alt=\"Remover transação\"\r\n                    onClick={() => removeTransaction(id)}\r\n                />\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default NewTransaction;"]},"metadata":{},"sourceType":"module"}