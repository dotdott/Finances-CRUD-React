{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avata\\\\OneDrive\\\\Documentos\\\\codes\\\\react-things\\\\crud-finances\\\\src\\\\contexts\\\\BalanceContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BalanceContext = /*#__PURE__*/createContext({});\n\nfunction BalanceProvider({\n  children\n}) {\n  _s();\n\n  const [total, setTotal] = useState(0);\n  const [expense, setExpense] = useState(0);\n  const [income, setIncome] = useState(0);\n\n  function addBalance(value) {\n    if (value > 0) {\n      setIncome(previousValue => previousValue + Number(value));\n      setTotal(previousPrice => previousPrice + Number(value));\n    } else if (value < 0) {\n      setExpense(previousValue => previousValue + Number(value));\n      setTotal(previousValue => previousValue + Number(value));\n    }\n  }\n\n  function removeBalance(id) {\n    Axios.delete(`http://localhost:5000/balance/delete/${id}`);\n\n    if (value > 0) {\n      setIncome(previousValue => previousValue - Number(value));\n      setTotal(previousPrice => previousPrice - Number(value));\n    } else if (value < 0) {\n      setExpense(previousValue => previousValue - Number(value));\n      setTotal(previousValue => previousValue - Number(value));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(BalanceContext.Provider, {\n    value: {\n      setTotal,\n      total,\n      expense,\n      income,\n      setExpense,\n      setIncome,\n      addBalance,\n      removeBalance\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BalanceProvider, \"qFeckbqXNgajeeMFfYCN+AHtvVg=\");\n\n_c = BalanceProvider;\nexport default BalanceProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"BalanceProvider\");","map":{"version":3,"sources":["C:/Users/avata/OneDrive/Documentos/codes/react-things/crud-finances/src/contexts/BalanceContext.tsx"],"names":["createContext","useState","Axios","BalanceContext","BalanceProvider","children","total","setTotal","expense","setExpense","income","setIncome","addBalance","value","previousValue","Number","previousPrice","removeBalance","id","delete"],"mappings":";;;AAAA,SAASA,aAAT,EAA0DC,QAA1D,QAA0E,OAA1E;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAiBA,OAAO,MAAMC,cAAc,gBAAGH,aAAa,CAAC,EAAD,CAApC;;AAEP,SAASI,eAAT,CAAyB;AAACC,EAAAA;AAAD,CAAzB,EAA2D;AAAA;;AACvD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;AAEA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,CAAD,CAAtC;AAEA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,CAAD,CAApC;;AAEA,WAASW,UAAT,CAAoBC,KAApB,EAAmC;AAC/B,QAAGA,KAAK,GAAG,CAAX,EAAa;AACTF,MAAAA,SAAS,CAACG,aAAa,IAAIA,aAAa,GAAGC,MAAM,CAACF,KAAD,CAAxC,CAAT;AACAN,MAAAA,QAAQ,CAACS,aAAa,IAAIA,aAAa,GAAGD,MAAM,CAACF,KAAD,CAAxC,CAAR;AACH,KAHD,MAGO,IAAIA,KAAK,GAAG,CAAZ,EAAe;AAClBJ,MAAAA,UAAU,CAACK,aAAa,IAAIA,aAAa,GAAGC,MAAM,CAACF,KAAD,CAAxC,CAAV;AACAN,MAAAA,QAAQ,CAACO,aAAa,IAAIA,aAAa,GAAGC,MAAM,CAACF,KAAD,CAAxC,CAAR;AACH;AACJ;;AAGD,WAASI,aAAT,CAAuBC,EAAvB,EAA4C;AACxChB,IAAAA,KAAK,CAACiB,MAAN,CAAc,wCAAuCD,EAAG,EAAxD;;AACA,QAAGL,KAAK,GAAG,CAAX,EAAa;AACTF,MAAAA,SAAS,CAACG,aAAa,IAAIA,aAAa,GAAGC,MAAM,CAACF,KAAD,CAAxC,CAAT;AACAN,MAAAA,QAAQ,CAACS,aAAa,IAAIA,aAAa,GAAGD,MAAM,CAACF,KAAD,CAAxC,CAAR;AACH,KAHD,MAGO,IAAIA,KAAK,GAAG,CAAZ,EAAe;AAClBJ,MAAAA,UAAU,CAACK,aAAa,IAAIA,aAAa,GAAGC,MAAM,CAACF,KAAD,CAAxC,CAAV;AACAN,MAAAA,QAAQ,CAACO,aAAa,IAAIA,aAAa,GAAGC,MAAM,CAACF,KAAD,CAAxC,CAAR;AACH;AACJ;;AAGD,sBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAC5BN,MAAAA,QAD4B;AAE5BD,MAAAA,KAF4B;AAG5BE,MAAAA,OAH4B;AAI5BE,MAAAA,MAJ4B;AAK5BD,MAAAA,UAL4B;AAM5BE,MAAAA,SAN4B;AAO5BC,MAAAA,UAP4B;AAQ5BK,MAAAA;AAR4B,KAAhC;AAAA,cAUKZ;AAVL;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA5CQD,e;;KAAAA,e;AA8CT,eAAeA,eAAf","sourcesContent":["import { createContext, ReactNode, useContext, useEffect, useState } from \"react\";\r\nimport { TransactionsContext } from \"./TransactionsContext\";\r\nimport Axios from 'axios';\r\n\r\ninterface BalanceContextData {\r\n    total: number;\r\n    setTotal: React.Dispatch<React.SetStateAction<number>>;\r\n    expense: number;\r\n    setExpense: React.Dispatch<React.SetStateAction<number>>;\r\n    income: number;\r\n    setIncome: React.Dispatch<React.SetStateAction<number>>;\r\n    addBalance: (value: number) => void;\r\n    removeBalance: (id: number |string) => void;\r\n}\r\n\r\ninterface BalanceProviderProps{\r\n    children: ReactNode;\r\n}\r\n\r\nexport const BalanceContext = createContext({} as BalanceContextData);\r\n\r\nfunction BalanceProvider({children}: BalanceProviderProps) {\r\n    const [total, setTotal] = useState(0);\r\n\r\n    const [expense, setExpense] = useState(0);\r\n\r\n    const [income, setIncome] = useState(0);\r\n\r\n    function addBalance(value: number) {\r\n        if(value > 0){\r\n            setIncome(previousValue => previousValue + Number(value));\r\n            setTotal(previousPrice => previousPrice + Number(value));\r\n        } else if (value < 0) {\r\n            setExpense(previousValue => previousValue + Number(value));\r\n            setTotal(previousValue => previousValue + Number(value));\r\n        }\r\n    }\r\n\r\n\r\n    function removeBalance(id: number | string) {\r\n        Axios.delete(`http://localhost:5000/balance/delete/${id}`)\r\n        if(value > 0){\r\n            setIncome(previousValue => previousValue - Number(value));\r\n            setTotal(previousPrice => previousPrice - Number(value));\r\n        } else if (value < 0) {\r\n            setExpense(previousValue => previousValue - Number(value));\r\n            setTotal(previousValue => previousValue - Number(value));\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <BalanceContext.Provider value={{\r\n            setTotal,\r\n            total,\r\n            expense,\r\n            income,\r\n            setExpense,\r\n            setIncome,\r\n            addBalance,\r\n            removeBalance\r\n        }}>\r\n            {children}\r\n        </BalanceContext.Provider>\r\n    )\r\n}\r\n\r\nexport default BalanceProvider;"]},"metadata":{},"sourceType":"module"}