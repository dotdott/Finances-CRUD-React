{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avata\\\\OneDrive\\\\Documentos\\\\codes\\\\react-things\\\\crud-finances\\\\src\\\\contexts\\\\TransactionsContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionsContext = /*#__PURE__*/createContext({});\nexport default function TransactionsProvider({\n  children\n}) {\n  _s();\n\n  const [ModalActive, setModalActive] = useState(false);\n  const [InputDescription, setInputDescription] = useState('');\n  const [InputAmount, setInputAmount] = useState(0);\n  const [InputDate, setInputDate] = useState('');\n  const [addTrans, setAddTrans] = useState([]); // function newTransaction(description: any, amount: number, date: any, id: any){\n  //     const newTrans = {\n  //         id: id,\n  //         key: id,\n  //         description: description,\n  //         amount: amount,\n  //         date: date\n  //     }\n  //     setAddTrans([... addTrans, newTrans]);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: {\n      InputDescription,\n      setInputDescription,\n      InputAmount,\n      setInputAmount,\n      InputDate,\n      setInputDate,\n      ModalActive,\n      setModalActive,\n      // newTransaction,\n      setAddTrans,\n      addTrans\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TransactionsProvider, \"r/8Pk/x4Ct2qPeB/FTyhllnMmsA=\");\n\n_c = TransactionsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"sources":["C:/Users/avata/OneDrive/Documentos/codes/react-things/crud-finances/src/contexts/TransactionsContext.tsx"],"names":["createContext","useState","TransactionsContext","TransactionsProvider","children","ModalActive","setModalActive","InputDescription","setInputDescription","InputAmount","setInputAmount","InputDate","setInputDate","addTrans","setAddTrans"],"mappings":";;;AAAA,SAASA,aAAT,EAA0DC,QAA1D,QAA0E,OAA1E;;AAsBA,OAAO,MAAMC,mBAAmB,gBAAGF,aAAa,CAAC,EAAD,CAAzC;AAEP,eAAe,SAASG,oBAAT,CAA8B;AAACC,EAAAA;AAAD,CAA9B,EAAoE;AAAA;;AAC/E,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,EAAD,CAAxD;AAEA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,CAAD,CAA9C;AAEA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM,CAACY,QAAD,EAAWC,WAAX,IACgDb,QAAQ,CAAC,EAAD,CAD9D,CAT+E,CAa/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,sBACI,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAE;AACjCM,MAAAA,gBADiC;AAEjCC,MAAAA,mBAFiC;AAGjCC,MAAAA,WAHiC;AAIjCC,MAAAA,cAJiC;AAKjCC,MAAAA,SALiC;AAMjCC,MAAAA,YANiC;AAOjCP,MAAAA,WAPiC;AAQjCC,MAAAA,cARiC;AASjC;AACAQ,MAAAA,WAViC;AAWjCD,MAAAA;AAXiC,KAArC;AAAA,cAaKT;AAbL;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GA1CuBD,oB;;KAAAA,oB","sourcesContent":["import { createContext, ReactNode, useContext, useEffect, useState } from \"react\";\r\nimport { BalanceContext } from \"./BalanceContext\";\r\n\r\ninterface TransactionsProviderData{\r\n    InputDescription: string;\r\n    setInputDescription: React.Dispatch<React.SetStateAction<string>>;\r\n    InputAmount: number;\r\n    setInputAmount: React.Dispatch<React.SetStateAction<number>>\r\n    InputDate: string;\r\n    setInputDate: React.Dispatch<React.SetStateAction<string>>;\r\n    ModalActive: boolean;\r\n    setModalActive: React.Dispatch<React.SetStateAction<boolean>>;\r\n    // newTransaction: (description: any, amount: any, date: any, id: any) => void;\r\n    addTrans: any[];\r\n    setAddTrans: React.Dispatch<React.SetStateAction<any>>;\r\n}\r\n\r\ninterface TransactionsProviderProps{\r\n    children: ReactNode;\r\n}   \r\n\r\n\r\nexport const TransactionsContext = createContext({} as TransactionsProviderData);\r\n\r\nexport default function TransactionsProvider({children}: TransactionsProviderProps){\r\n    const [ModalActive, setModalActive] = useState(false);\r\n\r\n    const [InputDescription, setInputDescription] = useState('');\r\n\r\n    const [InputAmount, setInputAmount] = useState(0);\r\n\r\n    const [InputDate, setInputDate] = useState('');\r\n\r\n    const [addTrans, setAddTrans]: \r\n    [any[], React.Dispatch<React.SetStateAction<any>>]  = useState([]);\r\n\r\n\r\n    // function newTransaction(description: any, amount: number, date: any, id: any){\r\n    //     const newTrans = {\r\n    //         id: id,\r\n    //         key: id,\r\n    //         description: description,\r\n    //         amount: amount,\r\n    //         date: date\r\n    //     }\r\n    //     setAddTrans([... addTrans, newTrans]);\r\n    // };\r\n    \r\n\r\n    return(\r\n        <TransactionsContext.Provider value={{\r\n            InputDescription,\r\n            setInputDescription,\r\n            InputAmount,\r\n            setInputAmount,\r\n            InputDate,\r\n            setInputDate,\r\n            ModalActive,\r\n            setModalActive,\r\n            // newTransaction,\r\n            setAddTrans,\r\n            addTrans\r\n        }}>\r\n            {children}\r\n        </TransactionsContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}